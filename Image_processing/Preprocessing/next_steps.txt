27.03.2024
FIXME Image Segmentation and drawing Bounding box. I think the problem is because of different brightness values in the images
- segment_img_3: wenn ich einen Filter (Gauß, median) anwende, habe ich das Problem bei Kartoffeln, dass die Sym Werte
in Richtung 1 gehen: Vermutung: Die kleinen Kartoffeltriebe werden herausgefiltert
- Der symmetrie Wert hängt natürlich von der bounding box ab. Wenn diese schlecht gezeichnet ist, z.b eine größere Fläche eingeschlossen wird
wir eigentlich das Gemüse hat, ist die Symmetrie schlechter. Erwartung: pos. correlation zwischen ratio area box und sym (für den Fall schlecht gezeichnete box)


22.03.2024
TODO fine tune segment_img method. segment_img_3 funktioniert aktuell am besten. Paramter try and errorr... Ersteinmal einfach so lassen...
TODO do not draw the bounding box lines or do not use images with bounding box for symmetry feature etc
- zeichne die bounding box um das binary img - ich denke das gibt die besseren Ergebnisse - kostenfunktion: pixel zählen von objekt binaray / fläche bounding geteilt durch contour area box
-> Unterschied ist minimal, wenn ich bounding box um das segment_bin_3 img zeichne


Final betrachtet, Das verhältnis der overlapping fläche muss ich zu der gespiegelten
    seite nehmen. Also zähle, wie viele Pixel sind gleich von gespiegelt zu orig rechte Hälfte 
    und dann setze ins Verhältnis Wie viel von Gesamten gespiegelten Pixel kommen wirklich
    in der origanlen rechten Hälfte vor 
    -> wenn ich die orig betrachte habe ich das Problem, das der segment_img algo Fehler einbaut
    und schwarze Flächen innerhalb des Gemüses setzt. -> Zählen von Orig Hälfte Pixel hat unterumständen
    viel mehr Punkte weil dort der algo keinen Fehler gemacht hat, wenn die Fehler nur auf linke Seite
    von Kartoffel auftreten: Vergleich: KI_Projekt/Bilder/Kartoffel/kartoffel_65.jpg'

21.03.2024
-  Wie bestimmte ich genau das Symmetriemaß ?
    - Die Differenz aus beiden Bildern nehmen funktioniert nicht so richtig. Problem ist die unterschiedliche Größe der Bilder -> hintergrund verfälscht das ergebnis
    - das problem ist dass ich über die Farbe die Symmetrie bestimme. aber eigentlich muss ich ja die Form anschauen
        - aber die Form zu bekommen ist schwierig weil sowohl als Canny als auch die binary segmentier methode etwas buggy sind- (wegen unterschiede in Fotoqualität)
    - berechne ich nur die Differenz der Farbpixel - baue ich Fehler ein. Es gibt z.b. schwarze punkte auf der Kartoffel, diese würden dann nicht erkannt werden obwohl es mit sym nichts zu tun hat


19.03.2024
-  crop neu berechnete bounding box von img_with_new_box
    - zeichne / bestimme symmetrieachse. Hor oder ver ?
    - Spiegele eine Hälfte
    - übereinanderlegen von orignaler hälfter / gespiegelter hälfte und dem ausgeschnittenen bounding box fläche von img_with_new_bo
    - feststellen der Ähnlichlichkeit der pixel von übereinandergelegten Bilder
    - Debugging Methode: meand and std von beiden Hälften des ausgeschnittenen Bildes vergleichen
    Erwartung: wenn symmetrisch dann ähnliche mean und std

04.03.2024
- Der aktuelle Ansatz wie die Boxen neu berechnet werden ist zu buggy. Es ist schwierig jeden Fall abzudecken
        der auftreten kann. Außerdem weiß ich nicht welche Bounding Boxen alles entstehen können.
        Bug war: Es können auch zwei Punkte außerhalb liegen, welche Diagonal zueinander stehen
        - Besserer Ansatz wäre es unabhängig davon machen welcher, und wieviele Punkte außerhalb sind
        - while point is outlier DO:
            - setze Punkt auf img Grenze
            - Merke welche Punkte versetzt worden sind und abhängig davon wird der nächste Punkt versetzt
            - Die box sollte im gleichen Verhältnis geändert werden

- Vllt ist es besser, die Vektoren u_0_1 und u_0_3 immer neu zu brechnen. Immer abhängig von der box was
        auf index 0 steht
25.02.2024

- Testen von bounding box resize Funktion
    - X Bilder durlaufen lassen und das neue rotierte Bild abspeichern. 
    - In einem Bild beide Bounding box darstellen

TODO: Überlegen wie das Symmetriefeature umgesetzt werden kann
    - wie lege ich die Symmetrieachse ? horizontal oder vertikal
    - Vergleich der Pixel mit .all() die in einer range (+-10) liegen ??? 
    - Schwierigkeit wird sein den Pixelbereich festzulegen, weil die color Werte wieder stark voneinander abweichen werden 
    - evtl. Konvertieren Schwarz - Grau ? Bzw. Schwarz - Weiß



older...
Prüfe ob jeder Eckpunkt innerhalb Bild liegt
    - Fall 1: Gilt für alle Eckpunkte außerhalb und 3 Eckpunkte außerhalb
        Bisher: Den Fall implementiert, wenn jeder Eckpunkt außerhalb ist -> die box wird komplett neu gezeichnet anhand geometrischer Gleichungen
     Implementiere Fall 2: Nur ein Eckpunkt außerhalb
     Implementiere Fall 3: Nur zwei Eckpunkte außerhalb (ich glaube diagonale Eckpunkte können nicht beide außerhalb sein. -> Nur direkt verbundene ->
         einfach parallel verschieben)

    - 


Crop gerade gedrehtes Rechteck aus Bild
    Mit der Implementierten rotationsmatrix kann ich jeden einzelnen Eckpunkt transformieren
    Mit der gleichen Rotationsmatrix auch das Bild drehen
    Transformierten Punkte abgleichen, damit horizontal und vertikal. range(-2, +2) Dann ist ok und setze p0_x = p1_x, das gleiche für die restlichen
    Transformierte und abgelichene Eckpunkte in gedrehtes Bild einzeichen -> Box malen -> crop


Symmetrie ermitteln im Bild
    - Symmetrieachse in Längsachse einzeichen in der Mitte der Box
    - linke Seite wird gespiegelt
    https://stackoverflow.com/questions/7589012/combining-two-images-with-opencv
    - gespiegelte Bild mit gedrehten Ursprungsbild vergleichen
    - Zählen der Pixel die sich unterscheiden ins Verhältnis zu Allen setzen ???
    - Um die Gleichheit der Pixel festzustellen, muss man evtl. auch in einer range prüfen +-5 oder so ???


Generelle Prüfung - Ist die gewählte Rotation dann für sämtliche boxen gültig -> visuell ??




